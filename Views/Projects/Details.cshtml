@using Microsoft.AspNetCore.Identity;
@using TurboTicketsMVC.Models.Enums;
@using TurboTicketsMVC.Services.Interfaces;
@model TurboTicketsMVC.Models.Project
@inject ITTProjectService _projectService;
@inject UserManager<TTUser> _UserManager;
@inject ITTRolesService _roleService;
@inject ITTFileService _fileService;

@{
    ViewData["Title"] = "Details";
    TTUser projectManager = await _projectService.GetProjectManagerAsync(Model.Id);
    bool isAdmin = User.IsInRole("Admin");
}

<div class="content">
    <div class="page-header">
        <div class="d-flex justify-content-between">
            <div>
                <h3>Project Details</h3>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Home" asp-action="Dashboard">Dashboard</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a asp-controller="Projects" asp-action="Index">Projects</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Project Details</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <div class="row gy-2">
        <div class="col-12 col-md-6 mt-5">
            <div class="card m-1 p-2">
                <div class="card-header">
                    <h5>@Model.Name</h5>
                </div>
                <div class="card-body">
                    <p>@Model.Description</p>
                    <div class="progress-container progress-info m-b-25">
                        <span class="progress-badge" style="font-size:small">Project Status</span>
                        <div class="progress">
                            @* Razor code block *@
                            @{
                                var start = Model.StartDate;
                                var end = Model.EndDate;
                                var today = DateTimeOffset.Now;
                                var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                            }
                            <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" @* style="width: @percent%;" *@>
                                @* Use Progress Bar code variable here *@
                                <span class="progress-value">@percent%</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 mt-5">
            <div class="card m-1 p-2">
                <div class="card-header">
                    <h5>Project Info</h5>
                </div>
                <div class="card-body">
                    <ul class=" list-unstyled basic-list">
                        <li>Start Date: <span class="">@Model.StartDate</span></li>
                        <li>Deadline: <span class="">@Model.EndDate</span></li>
                        <li>Priority: <span class="">@Model.ProjectPriority</span></li>
                        @* if() logic *@
                        @if (Model.Archived)
                        {
                            <li>Project: Inactive</li>
                        }
                        else
                        {
                            <li>Project: Active</li>
                        }
                    </ul>
                </div>
            </div>

        </div>
        <div class="col-md-8 col-12 mt-5 ">
            <div class="card m-1 p-2">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Project Team</h5>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editTeamModal">
                        Edit Team
                    </button>
                </div>
                <div class="card-body list-group list-group-flush" style="overflow-y:auto;height:300px;">
                    @foreach (TTUser member in Model.Members)
                    {
                        <div class="list-group-item d-flex px-0 align-items-start">
                            <div class="pr-3">
                                <span class="avatar">
                                    <img src="@_fileService.ConvertByteArrayToFile(member.ImageFileData!, member.ImageFileType!, DefaultImage.BTUserImage)"
                                         class="rounded-circle"
                                         alt="image">
                                </span>
                            </div>
                            <div class="flex-grow- 1">
                                <h6 class="mb-1">@member.FullName</h6>
                                @foreach (string? role in await _roleService.GetUserRolesAsync(member))
                                {
                                    if (role == "Admin" || role == "ProjectManager")
                                    {
                                        <span class="badge rounded-pill dark-bg">@role</span>
                                    }
                                    else if (role == "Developer")
                                    {
                                        <span class="badge rounded-pill bg-primary">@role</span>
                                    }
                                    else if(role == "Submitter")
                                    {
                                        <span class="badge rounded-pill bg-secondary">@role</span>
                                    } else
                                    {
                                        <span class="badge rounded-pill bg-warning">@role</span>

                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-4 col-12 mt-5 ">
            <div class="bg-dark">
                <div class="card m-1 p-2">
                    <div class="card-header">
                        <h5>Project Activity</h5>
                        
                    </div>
                    <div class="card-body" style="overflow-y:auto;height:300px;">
                        @* Project Activity loop *@
                        @foreach (TicketHistory history in Model.Tickets.SelectMany(t => t.History).OrderBy(h => h.CreatedDate))
                        {
                            <div class="">
                                <span class="date" style="font-weight:bold">@history.CreatedDate.ToString("dd MMM yyyy")</span>
                                <h6>@history.Description</h6>
                                <span>By: <a href="" title="@history.User!.FullName">@history.User.FullName</a></span>
                                <div class="">
                                    @if (history.Description!.Contains("New Ticket Created"))
                                    {
                                        <p>A ticket was added.</p>
                                    }
                                    else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
                                    {
                                        <p>A <b>@history.PropertyName</b> was added.</p>
                                    }
                                    else
                                    {
                                        <p>The ticket <b>@history.PropertyName</b> was edited.</p>
                                        <p>@($"Previous {history.PropertyName}: ") <span style="color:red">@history.OldValue</span></p>
                                        <p>@($"Current {history.PropertyName}: ") <span style="color:yellow">@history.NewValue</span></p>
                                    }
                                </div>
                            </div>
                            <hr />
                        }
                    </div>

                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="mt-5 bg-secondary">
                <div class="card m-1 p-2">
                    <div class="header">
                        <h2>Tickets</h2>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive" style="overflow-y:auto;height:600px;">
                            <table class="table table-hover">
                                <thead class="">
                                    <tr>
                                        @* Table header *@
                                        <td>Title</td>
                                        <td>Submitter</td>
                                        <td>Developer</td>
                                        <td>Status</td>
                                        <td></td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @* Table body *@
                                    @foreach (Ticket ticket in Model.Tickets)
                                    {
                                        <tr>
                                            <td>@ticket.Title</td>
                                            <td>@ticket.SubmitterUser?.FullName</td>
                                            @if (string.IsNullOrEmpty(ticket.DeveloperUser?.FullName))
                                            {
                                                <td>Unassigned</td>
                                            }
                                            else
                                            {
                                                <td>@ticket.DeveloperUser?.FullName</td>
                                            }
                                            <td>@ticket.TicketStatus</td>
                                            <td><a asp-controller="Tickets" asp-action="Details" asp-route-id="@ticket.Id">Details</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="editTeamModal" tabindex="-1" aria-labelledby="editTeamModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="EditTeam" asp-controller="Projects" method="Post">
                <input type="hidden" value="@Model.Id" name="ProjectId" />
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Team</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (isAdmin)
                    {
                        <div class="form-group">
                            <label for="projectManagerSelect" class="control-label">Project Manager</label>
                            <select name="projectManagerId" id="projectManagerSelect" class="form-control dropdown-toggle" asp-items="ViewBag.ProjectManagers"></select>
                        </div>
                    }
                    else
                    {
                        <input type="hidden" name="ProjectManagerId" value="@projectManager.Id" />
                    }
                    <div class="form-group">
                        <label for="developerTeamSelect" class="control-label">Developers</label>
                        <select name="DeveloperIds" id="developerTeamSelect" class="form-control" style="height: 100px;" asp-items="ViewBag.Developers" multiple></select>
                    </div>
                    <div class="form-group">
                        <label for="submitterTeamSelect" class="control-label">Submitters</label>
                        <select name="SubmitterIds" id="submitterTeamSelect" class="form-control" style="height: 100px;" asp-items="ViewBag.Submitters" multiple></select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
