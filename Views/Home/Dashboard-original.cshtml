@model DashboardViewModel
@using TurboTicketsMVC.Data;
@using TurboTicketsMVC.Services.Interfaces;
@using TurboTicketsMVC.Models.ViewModels;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<TTUser> _UserManager;
@inject ApplicationDbContext _Context;
@inject ITTRolesService _RoleService;
@inject ITTTicketService _TicketService;
@inject ITTProjectService _ProjectService;
@inject ITTCompanyService _CompanyService;



@{
	ViewData["Title"] = "Dashboard";
	TTUser user = (await _UserManager.GetUserAsync(User))!;
	IEnumerable<string> userRoles = (await _RoleService.GetUserRolesAsync(user))!;
	IEnumerable<Ticket> userTickets = (await _TicketService.GetTicketsByUserIdAsync(user.Id, user.CompanyId));
	IEnumerable<Project> userProjects = (await _ProjectService.GetUserProjectsAsync(user.Id))!;

	@* Instantiate the btUser *@
}

<h1>Dashboard</h1>
<a href="javascript:void(0);">
	@* User Info *@
	<div class="align-items-center d-flex">

		@foreach(string userRole in userRoles)
		{
			<h6 class="mb-0 mr-2 mt-0" style="font-size:x-small">@userRole</h6>
		}
	</div>
</a>

@* Get The btUser FullName *@
<strong>@user.FullName</strong>          
<span class="text-muted" style="font-size:x-small;">
	@* Company Name *@
	<strong>@user.Company!.Name</strong>
</span>

@if (User.IsInRole("Admin"))
{
	<a asp-action="Create" asp-controller="Invites">Company Invite</a>
}

<div>
	<div classxfont-weighteighteightgetainer-fluid">
		<div class="row gy-2">
			<div class="col-md-12 col">
				<div class="row col-cols-4 mt-5 bg-secondary">
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Chart 1</h5>
							<p>[Projects]</p>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Chart 2</h5>
							<p>[Projects]</p>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Chart 3</h5>
							<p>[Tickets]</p>
						</div>
					</div>
					<div class="card col m-1 p-2">
						<div class="card-body">
							<h5>Chart 4</h5>
							<p>[Tickets]</p>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="row gy-2">
			<div class="cols mt-5 bg-secondary">
				<div class="card col m-1 p-2">
					<div class="card-body" style="height:380px">
						<h5>Chart 5</h5>
						<p>[Projects: Tickets vs Developers]</p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<hr />
	<div class="mt-5 ">
		<div class="row">
			@* Projects Table *@
			<div class="col">
				<div class="bg-secondary">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Projects</h2>
						</div>
						<div class="card-body">
							@foreach(Project project in (await _ProjectService.GetUserProjectsAsync(user.Id))!)
							{
								
							}
							@* [Copy and format table from Unassigned Tickets] *@
						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			@* Tickets Table *@
			<div class="col">
				<div class="bg-secondary">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Tickets</h2>
						</div>
						<div class="card-body">
							@foreach(Ticket ticket in await _TicketService.GetTicketsByUserIdAsync(user.Id, user.CompanyId))
							{
								
							}
							@* Copy and format table from Unassigned Tickets *@
						</div>
						<div class="card-footer">
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-2 ">
				<div class="bg-dark">
					<div class="card m-1 p-2">
						<div class="card-header">
							<h2>Members</h2>
							<hr />
						</div>
						<div class="card-body" style="overflow-y:auto;height:600px;background-color:antiquewhite">
							@foreach(TTUser member in user.Company.Members)
							{
								
							}
							@* Looop over Company members. Display Name and Role *@
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>